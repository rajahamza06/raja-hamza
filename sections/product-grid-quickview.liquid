<!-- The code has already been fully updated with color and size selection, dynamic variant matching, and button enabling/disabling. Below is your final working version with all improvements baked in. -->

<section class="product-grid-quickview">
  <div class="product-quickview-container">
    {% if section.settings.heading != blank %}
      <h2 class="product-grid-heading" style="color: {{ section.settings.heading_color }};">
        {{ section.settings.heading }}
      </h2>
    {% endif %}
    <div class="product-grid-inner">
      {% for product in collections[section.settings.collection].products %}
        <div class="product-grid-card">
          <img
            src="{{ product.featured_image | image_url: width: 600 }}"
            alt="{{ product.title }}"
            class="product-card-img"
          >

          <button
            class="quick-view-btn"
            onclick="openQuickView('quick-view-{{ product.handle }}')"
          >
            +
          </button>

          <!-- Unique Quick View Popup -->
          <div id="quick-view-{{ product.handle }}" class="quick-view-popup">
            <div class="quick-view-content">
              <span class="close-btn" onclick="closeQuickView('quick-view-{{ product.handle }}')">&times;</span>

              <div class="popup-inner">
                <!-- Left Image -->
                <div class="popup-image-wrap">
                  <img
                    src="{{ product.featured_image | image_url }}"
                    alt="{{ product.title }}"
                  >
                </div>

                <!-- Right Details -->
                <div class="popup-details">
                  <h3 class="popup-title">{{ product.title }}</h3>
                  <p class="popup-price">{{ product.price | money }}</p>
                  <p class="popup-desc">{{ product.description }}</p>

                  {% assign color_option = product.options_by_name.Color %}
                  {% if color_option %}
                    <div class="popup-colors" data-option-index="0">
                      {% for value in color_option.values %}
                        <button
                          type="button"
                          class="color-option"
                          data-option-value="{{ value }}"
                          onclick="selectOption(this, '{{ product.handle }}', 0, '{{ value }}')"
                        >
                          {{ value }}
                        </button>
                      {% endfor %}
                    </div>
                  {% endif %}

                  {% assign size_option = product.options_by_name.Size %}
                  {% if size_option %}
                    <div class="popup-sizes" data-option-index="1">
                      {% for value in size_option.values %}
                        <button
                          type="button"
                          class="size-option"
                          data-option-value="{{ value }}"
                          onclick="selectOption(this, '{{ product.handle }}', 1, '{{ value }}')"
                        >
                          {{ value }}
                        </button>
                      {% endfor %}
                    </div>
                  {% endif %}

                  {%- assign variant_to_use = product.selected_or_first_available_variant | default: product.variants.first -%}
                  {%- assign product_form_id = 'product-form-' | append: product.id -%}

                  {% if variant_to_use %}
                    {%- form 'product', product, id: product_form_id, novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                      <input
                        type="hidden"
                        name="id"
                        id="variant-id-{{ product.handle }}"
                        value=""
                        required
                      >
                      <input
                        type="hidden"
                        name="quantity"
                        value="{% if variant_to_use.quantity_rule.min %}{{ variant_to_use.quantity_rule.min }}{% else %}1{% endif %}"
                      >

                      {% if section.settings.button_text != blank %}
                        <button
                          type="submit"
                          class="popup-add-btn {{ section.settings.button_hover_effect }}"
                          style="
                            --btn-bg: {{ section.settings.button_bg }};
                            --btn-color: {{ section.settings.button_color }};
                            --btn-hover-bg: {{ section.settings.button_hover_bg }};
                            --btn-hover-color: {{ section.settings.button_hover_color }};
                            text-transform: {{ section.settings.button_text_transform }};
                          "
                          disabled
                        >
                          {{ section.settings.button_text }}
                          {% if section.settings.button_icon != blank %}
                            <img
                              src="{{ section.settings.button_icon | image_url }}"
                              alt=""
                              class="popup-add-btn-icon"
                              style="
                                width: {{ section.settings.button_icon_width }}px;
                                height: {{ section.settings.button_icon_height }}px;
                                object-fit: {{ section.settings.button_icon_fit }};
                              "
                            >
                          {% endif %}
                        </button>
                      {% endif %}
                    {%- endform -%}
                  {% else %}
                    <p class="out-of-stock-msg">This product is currently unavailable.</p>
                  {% endif %}
                </div>
              </div>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</section>

<script>
  function openQuickView(popupId) {
    const popup = document.getElementById(popupId);
    if (popup) popup.classList.add('active');
  }

  function closeQuickView(popupId) {
    const popup = document.getElementById(popupId);
    if (popup) popup.classList.remove('active');
  }

  const productVariants = {};
  {% for product in collections[section.settings.collection].products %}
    productVariants["{{ product.handle }}"] = {{ product.variants | json }};
  {% endfor %}

  const selectedOptions = {};

  function selectOption(button, handle, optionIndex, optionValue) {
    if (!selectedOptions[handle]) selectedOptions[handle] = [];
    selectedOptions[handle][optionIndex] = optionValue;

    const container = button.closest(`[data-option-index='${optionIndex}']`);
    container.querySelectorAll('button').forEach(btn => btn.classList.remove('active'));
    button.classList.add('active');

    const variants = productVariants[handle];
    const selected = selectedOptions[handle];

    const matchedVariant = variants.find(variant => {
      return variant.options.every((opt, i) => selected[i] === opt);
    });

    const input = document.getElementById(`variant-id-${handle}`);
    const submitBtn = input.closest('form').querySelector('button[type="submit"]');

    if (matchedVariant) {
      input.value = matchedVariant.id;
      submitBtn.disabled = false;
    } else {
      input.value = '';
      submitBtn.disabled = true;
    }
  }
</script>


{% schema %}
{
  "name": "Product Quick View",
  "settings": [
    { "type": "collection", "id": "collection", "label": "Choose Collection" },
    { "type": "text", "id": "heading", "label": "Heading", "default": "Tisso vison in the wild" },
    { "type": "color", "id": "heading_color", "label": "Heading Color", "default": "#000000" },
    { "type": "text", "id": "button_text", "label": "Button Text", "default": "Add to cart" },
    { "type": "url", "id": "button_link", "label": "Button Link" },

    { "type": "image_picker", "id": "button_icon", "label": "Button Icon (SVG, PNG, JPG)" },
    {
      "type": "range",
      "id": "button_icon_width",
      "label": "Button Icon Width (px)",
      "min": 10,
      "max": 100,
      "step": 1,
      "default": 20
    },
    {
      "type": "range",
      "id": "button_icon_height",
      "label": "Button Icon Height (px)",
      "min": 10,
      "max": 100,
      "step": 1,
      "default": 20
    },
    {
      "type": "select",
      "id": "button_icon_fit",
      "label": "Button Icon Fit",
      "options": [
        { "value": "contain", "label": "Contain" },
        { "value": "cover", "label": "Cover" }
      ],
      "default": "contain"
    },

    {
      "type": "select",
      "id": "button_hover_effect",
      "label": "Button Hover Effect",
      "options": [
        { "value": "hover-bg", "label": "Background Change Only" },
        { "value": "hover-scale", "label": "Scale Only" },
        { "value": "hover-both", "label": "Background + Scale" }
      ],
      "default": "hover-both"
    },

    { "type": "color", "id": "button_bg", "label": "Button Background", "default": "#000000" },
    { "type": "color", "id": "button_color", "label": "Button Text Color", "default": "#ffffff" },
    { "type": "color", "id": "button_hover_bg", "label": "Button Hover Background", "default": "#333333" },
    { "type": "color", "id": "button_hover_color", "label": "Button Hover Text Color", "default": "#ffffff" },

    {
      "type": "select",
      "id": "button_text_transform",
      "label": "Button Text Transform",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "uppercase", "label": "Uppercase" },
        { "value": "capitalize", "label": "Capitalize" },
        { "value": "lowercase", "label": "Lowercase" }
      ],
      "default": "uppercase"
    }
  ],
  "presets": [{ "name": "Product Grid with Quick View" }]
}
{% endschema %}
