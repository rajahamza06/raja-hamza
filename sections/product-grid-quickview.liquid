<section class="product-grid-quickview">
  <div class="product-grid-container">
    {% for product in collections[section.settings.collection].products %}
      <div class="product-card">
        <img 
          src="{{ product.featured_image | image_url: width: 600 }}" 
          alt="{{ product.title }}" 
          class="product-card-img"
        >
        <button class="quick-view-btn" onclick="openQuickView('{{ product.handle }}')">
          +
        </button>
      </div>
    {% endfor %}
  </div>

  <!-- Quick View Popup -->
  <div id="quick-view-popup" class="quick-view-popup">
    <div class="quick-view-content">
      <span class="close-btn" onclick="closeQuickView()">&times;</span>
      <div class="popup-inner">
        <img id="popup-image" src="" alt="">
        <div class="popup-details">
          <h3 id="popup-title"></h3>
          <p id="popup-price"></p>
          <p id="popup-description"></p>

          <div id="popup-variants"></div>

          <button id="add-to-cart-btn">ADD TO CART â†’</button>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
/* Grid */
.product-grid-quickview {
  padding: 40px 20px;
}
.product-grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  gap: 15px;
}
.product-card {
  position: relative;
  overflow: hidden;
}
.product-card-img {
  width: 100%;
  height: auto;
  display: block;
}
.quick-view-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  background: #000;
  color: #fff;
  border: none;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  font-size: 18px;
  line-height: 30px;
  cursor: pointer;
  transition: 0.3s;
}
.quick-view-btn:hover { background: #333; }

/* Popup */
.quick-view-popup {
  display: none;
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.6);
  z-index: 9999;
  justify-content: center;
  align-items: center;
}
.quick-view-popup.active { display: flex; }
.quick-view-content {
  background: #fff;
  padding: 20px;
  width: 400px;
  max-width: 90%;
  position: relative;
  animation: popupFade 0.3s ease;
}
@keyframes popupFade {
  from { opacity:0; transform: scale(0.9); }
  to { opacity:1; transform: scale(1); }
}
.close-btn {
  position: absolute;
  top: 10px; right: 10px;
  font-size: 24px;
  cursor: pointer;
}
.popup-inner { display: flex; flex-direction: column; gap: 15px; }
.popup-inner img { width: 100%; height: auto; }
.popup-details h3 { margin: 0; font-size: 20px; }
.popup-details p { margin: 5px 0; }
#popup-variants { margin: 15px 0; }
#popup-variants select {
  width: 100%; margin-bottom: 10px; padding: 8px;
  border: 1px solid #ddd;
}
#add-to-cart-btn {
  width: 100%; padding: 12px;
  background: #000; color: #fff; border: none;
  font-weight: bold; cursor: pointer;
  transition: 0.3s;
}
#add-to-cart-btn:hover { background: #333; }
</style>

<script>
let currentProduct = null;
let selectedVariantId = null;

// Open Quick View
async function openQuickView(handle) {
  const popup = document.getElementById('quick-view-popup');
  popup.classList.add('active');

  const res = await fetch(`/products/${handle}.js`);
  const product = await res.json();
  currentProduct = product;

  document.getElementById('popup-image').src = product.images[0];
  document.getElementById('popup-title').innerText = product.title;
  document.getElementById('popup-price').innerText = 
    (product.price / 100).toFixed(2) + ' ' + '{{ shop.currency }}';
  document.getElementById('popup-description').innerText = product.description;

  // Render variants
  const variantsContainer = document.getElementById('popup-variants');
  variantsContainer.innerHTML = '';
  if(product.variants.length > 1){
    product.options.forEach((option, index) => {
      const select = document.createElement('select');
      select.dataset.index = index;
      select.innerHTML = `<option disabled selected>Choose ${option.name}</option>`;
      option.values.forEach(value => {
        select.innerHTML += `<option value="${value}">${value}</option>`;
      });
      select.addEventListener('change', updateVariant);
      variantsContainer.appendChild(select);
    });
  } else {
    selectedVariantId = product.variants[0].id;
  }
}

// Update selected variant
function updateVariant() {
  const selects = document.querySelectorAll('#popup-variants select');
  const chosen = Array.from(selects).map(s => s.value);
  const match = currentProduct.variants.find(v =>
    v.options.every((opt, idx) => opt === chosen[idx])
  );
  if(match){
    selectedVariantId = match.id;
  }
}

// Close popup
function closeQuickView() {
  document.getElementById('quick-view-popup').classList.remove('active');
}

// Add to cart
document.getElementById('add-to-cart-btn').addEventListener('click', async () => {
  if(!selectedVariantId && currentProduct.variants.length > 1){
    alert('Please select all options');
    return;
  }

  await fetch('/cart/add.js', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ id: selectedVariantId, quantity: 1 })
  });

  // Auto-add Soft Winter Jacket if condition met
  const selectedVariant = currentProduct.variants.find(v => v.id === selectedVariantId);
  if(selectedVariant && selectedVariant.title.includes('Black') && selectedVariant.title.includes('Medium')){
    const jacketHandle = 'soft-winter-jacket'; // replace with your handle
    const res = await fetch(`/products/${jacketHandle}.js`);
    const jacket = await res.json();
    await fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id: jacket.variants[0].id, quantity: 1 })
    });
  }

  alert('Product added to cart!');
  closeQuickView();
});
</script>

{% schema %}
{
  "name": "Product Quick View",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Choose Collection"
    }
  ],
  "presets": [
    {
      "name": "Product Grid with Quick View"
    }
  ]
}
{% endschema %}
