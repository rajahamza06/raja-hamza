<section class="product-grid-quickview">
  <div class="product-quickview-container">
    {% if section.settings.heading != blank %}
      <h2 class="product-grid-heading" style="color: {{ section.settings.heading_color }};">
        {{ section.settings.heading }}
      </h2>
    {% endif %}
    <div class="product-grid-inner">
      {% for product in collections[section.settings.collection].products %}
        <div class="product-grid-card">
          <img
            src="{{ product.featured_image | image_url: width: 600 }}"
            alt="{{ product.title }}"
            class="product-card-img"
          >
          <button class="quick-view-btn" onclick="openQuickView('{{ product.handle }}')">+</button>
        </div>
      {% endfor %}
    </div>
  </div>

  <!-- Quick View Popup -->
  <div id="quick-view-popup" class="quick-view-popup">
    <div class="quick-view-content">
      <span class="close-btn" onclick="closeQuickView()">&times;</span>

      <div class="popup-inner">
        <!-- Left Image -->
        <div class="popup-image-wrap">
          <img id="popup-image" src="" alt="">
        </div>

        <!-- Right Details -->
        <div class="popup-details">
          <h3 id="popup-title" class="popup-title"></h3>
          <p id="popup-price" class="popup-price"></p>
          <p id="popup-description" class="popup-desc"></p>

          <div id="popup-variants"></div>

          {% if section.settings.button_text != blank %}
            <a
              href="{{ section.settings.button_link }}"
              class="popup-add-btn {{ section.settings.button_hover_effect }}"
              style="
                --btn-bg: {{ section.settings.button_bg }};
                --btn-color: {{ section.settings.button_color }};
                --btn-hover-bg: {{ section.settings.button_hover_bg }};
                --btn-hover-color: {{ section.settings.button_hover_color }};
                text-transform: {{ section.settings.button_text_transform }};
              "
              id="add-to-cart-btn"
            >
              {{ section.settings.button_text }}
              {% if section.settings.button_icon != blank %}
                <img
                  src="{{ section.settings.button_icon | image_url }}"
                  alt=""
                  class="popup-add-btn-icon"
                  style="
                    width: {{ section.settings.button_icon_width }}px;
                    height: {{ section.settings.button_icon_height }}px;
                    object-fit: {{ section.settings.button_icon_fit }};
                  "
                >
              {% endif %}
            </a>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</section>

{% style %}
  .product-grid-quickview{
    padding-block:90px;

  }
    .product-quickview-container {
       width: 100%;
        max-width: 1360px;
        margin: 0 auto;
        padding-inline: 15px;
    }
    .product-grid-inner{
        display: grid;
      grid-template-columns: repeat(auto-fill, minmax(433px, 1fr));
      gap: 20px;
    }
    .product-grid-heading{
        font-family: Lustria;
        font-weight: 400;
        font-style: Regular;
        font-size: 36px;
       line-height: 1.2;
       margin-bottom:30px;
    }
    .product-grid-card{ position: relative; overflow: hidden; }
    .product-card-img { width: 100%; display: block; }
    .quick-view-btn {
      position: absolute; top: 10px; right: 10px;
      background: #000; color: #fff;
      border: none; border-radius: 50%;
      width: 30px; height: 30px;
      font-size: 18px; line-height: 30px;
      cursor: pointer; transition: 0.3s;
    }
    .quick-view-btn:hover { background: #333; }

    /* Popup Overlay */
    .quick-view-popup {
      display: none;
      position: fixed; top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0,0,0,0.6);
      z-index: 9999;
      justify-content: center; align-items: center;
    }
    .quick-view-popup.active { display: flex; }

    .quick-view-content {
      background: #fff;
      padding: 20px;
      width: 350px; max-width: 90%;
      position: relative;
      animation: popupFade 0.3s ease;
    }
    @keyframes popupFade {
      from { opacity:0; transform: scale(0.95); }
      to { opacity:1; transform: scale(1); }
    }
    .close-btn {
      position: absolute; top: 12px; right: 12px;
      font-size: 22px; cursor: pointer;
    }

    /* Popup Layout */
    .popup-inner { display: flex; flex-direction: column; gap: 12px; }
    .popup-image-wrap img { width: 100%; margin-bottom: 12px; }
    .popup-title { font-size: 16px; font-weight: 600; margin: 0; }
    .popup-price { font-weight: 600; font-size: 16px; margin: 0; }
    .popup-desc { font-size: 13px; line-height: 1.4; color: #333; margin-bottom: 12px; }

    /* Variant Section */
    #popup-variants { display: flex; flex-direction: column; gap: 10px; margin-bottom: 10px; }
    #popup-variants label { font-size: 13px; font-weight: 500; margin-bottom: 4px; }
    #popup-variants select {
      padding: 8px; border: 1px solid #000;
      font-size: 13px; width: 100%;
    }

    /* Add to Cart Button */
    .popup-add-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 18px;
    padding: 14px 52px;
    text-decoration: none;
    transition: all 0.3s ease;
    width: fit-content;
    background: var(--btn-bg);
    color: var(--btn-color);
  }

  .popup-add-btn-icon {
    display: inline-block;
    transition: filter 0.3s ease;
  }

  .popup-add-btn.hover-bg:hover {
    background: var(--btn-hover-bg);
    color: var(--btn-hover-color);
  }
  .popup-add-btn.hover-scale:hover { transform: scale(1.05); }
  .popup-add-btn.hover-both:hover {
    background: var(--btn-hover-bg);
    color: var(--btn-hover-color);
    transform: scale(1.05);
  }
  .popup-add-btn.hover-bg:hover img,
  .popup-add-btn.hover-both:hover img {
    filter: invert(1);
  }
{% endstyle %}

<script>
  let currentProduct = null;
  let selectedOptions = [];
  let selectedVariantId = null;

  // Open Quick View
  async function openQuickView(handle) {
    const popup = document.getElementById('quick-view-popup');
    popup.classList.add('active');

    const res = await fetch(`/products/${handle}.js`);
    const product = await res.json();
    currentProduct = product;
    selectedOptions = new Array(product.options.length).fill(null);

    // Fill popup
    document.getElementById('popup-image').src = product.images[0];
    document.getElementById('popup-title').innerText = product.title;
    document.getElementById('popup-price').innerText = (product.price / 100).toFixed(2) + ' {{ shop.currency }}';
    document.getElementById('popup-description').innerText = product.description;

    // Render variant selects
    const variantsContainer = document.getElementById('popup-variants');
    variantsContainer.innerHTML = '';
    product.options.forEach((option, index) => {
      const label = document.createElement('label');
      label.textContent = option;
      const select = document.createElement('select');
      select.dataset.index = index;
      select.innerHTML = `<option disabled selected>Choose ${option}</option>`;
      const values = [...new Set(product.variants.map((v) => v.options[index]))];
      values.forEach((value) => {
        select.innerHTML += `<option value="${value}">${value}</option>`;
      });
      select.addEventListener('change', (e) => {
        selectedOptions[index] = e.target.value;
        updateVariant();
      });
      variantsContainer.appendChild(label);
      variantsContainer.appendChild(select);
    });

    // Default single variant
    if (product.variants.length === 1) {
      selectedVariantId = product.variants[0].id;
    }
  }

  function updateVariant() {
    const match = currentProduct.variants.find((v) =>
      v.options.every((opt, idx) => !selectedOptions[idx] || opt === selectedOptions[idx])
    );
    if (match) selectedVariantId = match.id;
  }

  function closeQuickView() {
    document.getElementById('quick-view-popup').classList.remove('active');
  }

  // Add to cart
  document.getElementById('add-to-cart-btn').addEventListener('click', async () => {
    if (!selectedVariantId) {
      alert('Please select all options');
      return;
    }

    await fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id: selectedVariantId, quantity: 1 }),
    });

    window.location.href = '/cart';
  });
</script>

{% schema %}
{
  "name": "Product Quick View",
  "settings": [
    { "type": "collection", "id": "collection", "label": "Choose Collection" },
    { "type": "text", "id": "heading", "label": "Heading", "default": "Tisso vison in the wild" },
    { "type": "color", "id": "heading_color", "label": "Heading Color", "default": "#000000" },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "ADD TO CART â†’"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link"
    },
    {
      "type": "color",
      "id": "button_bg",
      "label": "Button background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_bg",
      "label": "Button hover background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover text color",
      "default": "#000000"
    },
    {
      "type": "select",
      "id": "button_text_transform",
      "label": "Button text transform",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "uppercase", "label": "Uppercase" },
        { "value": "lowercase", "label": "Lowercase" },
        { "value": "capitalize", "label": "Capitalize" }
      ],
      "default": "uppercase"
    },
    {
      "type": "image_picker",
      "id": "button_icon",
      "label": "Button icon"
    },
    {
      "type": "range",
      "id": "button_icon_width",
      "label": "Icon width (px)",
      "min": 10,
      "max": 100,
      "step": 1,
      "default": 20
    },
    {
      "type": "range",
      "id": "button_icon_height",
      "label": "Icon height (px)",
      "min": 10,
      "max": 100,
      "step": 1,
      "default": 20
    },
    {
      "type": "select",
      "id": "button_icon_fit",
      "label": "Icon object fit",
      "options": [
        { "value": "contain", "label": "Contain" },
        { "value": "cover", "label": "Cover" },
        { "value": "fill", "label": "Fill" },
        { "value": "none", "label": "None" },
        { "value": "scale-down", "label": "Scale Down" }
      ],
      "default": "contain"
    },
    {
      "type": "select",
      "id": "button_hover_effect",
      "label": "Button hover effect class",
      "options": [
        { "value": "", "label": "None" },
        { "value": "hover-effect-1", "label": "Effect 1" },
        { "value": "hover-effect-2", "label": "Effect 2" }
      ],
      "default": ""
    }
  ],
  "presets": [{ "name": "Product Grid with Quick View" }]
}
{% endschema %}
